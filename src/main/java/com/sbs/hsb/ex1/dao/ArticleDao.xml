<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sbs.hsb.ex1.dao.ArticleDao">

	<select id="getForPrintArticles" resultMap="article">
		SELECT A.*,
		M.nickname AS extra__writer
		FROM article AS A
		INNER JOIN member AS M
		ON A.memberId = M.id
		WHERE A.displayStatus = 1
		AND A.delStatus = 0
		ORDER BY A.id DESC
	</select>
	
	<!-- not null boardId articleList -->
	<!-- left조인 두개 실패, 질문 후, 안되면 댓글수 따로 빼자... -->
	<!-- reply에는 조건으로 AL.del관련 추가 필요성 -->
	<select id="getForPrintListArticles" resultMap="article">
		SELECT A.*,
		SUM(IFNULL(AL.point, 0)) AS extra__likePoint
		FROM (
		    SELECT A.*,
		    M.nickname AS extra__writer,
		    COUNT(DISTINCT RL.id) AS extra__repliesCount
		    FROM article AS A
		    INNER JOIN `member` AS M
		    ON A.memberId = M.id
		    AND M.delStatus = 0
		    LEFT JOIN reply AS RL
		    ON A.id = RL.relId
		    AND RL.relTypeCode = 'article'
		    AND RL.displayStatus = 1
		    AND RL.delStatus = 0
		    WHERE A.displayStatus = 1
		    AND A.delStatus = 0
		    AND A.boardId = #{boardId}
		   	<if test="searchKeywordType.equals('title')">AND A.title LIKE CONCAT('%' , #{searchKeyword}, '%')</if>
			<if test="searchKeywordType.equals('body')">AND A.body LIKE CONCAT('%' , #{searchKeyword}, '%')</if>
		    GROUP BY A.id
		) AS A
		LEFT JOIN articleLike AS AL
		ON A.id = AL.articleId
		GROUP BY A.id
		ORDER BY A.id DESC
		LIMIT #{limitFrom}, #{itemsInAPage}
	</select>
	
	<!-- null boardId articleList-->
	<!-- left조인 두개 실패, 질문 후, 안되면 댓글수 따로 빼자... -->
	<select id="getNotBoardIdForPrintListArticles" resultMap="article">
		SELECT A.*,
		SUM(IFNULL(AL.point, 0)) AS extra__likePoint
		FROM (
		    SELECT A.*,
		    M.nickname AS extra__writer,
		    COUNT(DISTINCT RL.id) AS extra__repliesCount
		    FROM article AS A
		    INNER JOIN `member` AS M
		    ON A.memberId = M.id
		    AND M.delStatus = 0
		    LEFT JOIN reply AS RL
		    ON A.id = RL.relId
		    AND RL.relTypeCode = 'article'
		    AND RL.displayStatus = 1
		    AND RL.delStatus = 0
		    WHERE A.displayStatus = 1
		    AND A.delStatus = 0
		   	<if test="searchKeywordType.equals('title')">AND A.title LIKE CONCAT('%' , #{searchKeyword}, '%')</if>
			<if test="searchKeywordType.equals('body')">AND A.body LIKE CONCAT('%' , #{searchKeyword}, '%')</if>
		    GROUP BY A.id
		) AS A
		LEFT JOIN articleLike AS AL
		ON A.id = AL.articleId
		GROUP BY A.id
		ORDER BY A.id DESC
		LIMIT #{limitFrom}, #{itemsInAPage}
	</select>
	
	<!-- My Page Article List-->
	<select id="getMyPageArticles" resultMap="article">
		SELECT A.*,
		B.name AS extra__boardName
		FROM article AS A
		INNER JOIN board AS B
		ON A.boardId = B.id
		WHERE B.delStatus = 0
		AND A.memberId = #{loginedMemberId}
		AND A.delStatus = 0
		AND A.displayStatus = 1
		GROUP BY A.id
		ORDER BY A.id DESC
		LIMIT #{limitFrom}, #{itemsInAPage}
	</select>
	 
	
	<!-- 게시물 카운트 not null boardId  -->
	<select id="getForPrintListArticlesCount" resultType="int">
		SELECT COUNT(*) AS cnt
		FROM article AS A
		INNER JOIN `member` AS M
		ON A.memberId = M.id
		WHERE A.displayStatus = 1
		AND A.delStatus = 0
		AND M.delStatus = 0
		AND boardId = #{boardId}
		<if test="searchKeywordType.equals('title')">AND A.title LIKE CONCAT('%' , #{searchKeyword}, '%')</if>
		<if test="searchKeywordType.equals('body')">AND A.body LIKE CONCAT('%' , #{searchKeyword}, '%')</if>
	</select>
	
	<!-- 게시물 카운트 null boardId-->  
	<select id="getNotBoardIdForPrintListArticlesCount" resultType="int">
		SELECT COUNT(*) AS cnt
		FROM article AS A
		INNER JOIN `member` AS M
		ON A.memberId = M.id
		WHERE A.displayStatus = 1
		AND A.delStatus = 0
		AND M.delStatus = 0
		<if test="searchKeywordType.equals('title')">AND A.title LIKE CONCAT('%' , #{searchKeyword}, '%')</if>
		<if test="searchKeywordType.equals('body')">AND A.body LIKE CONCAT('%' , #{searchKeyword}, '%')</if>
	</select>
	
	
	<!-- left조인 두개 실패, 질문 후, 안되면 댓글수 따로 빼자... -->
	<!-- boardCode 는 WHERE 하지 않아도 되는가? -->
	<!-- reply에는 조건으로 AL.del관련 추가 필요성  -->
	<select id="getForPrintArticleById" resultMap="article">
		SELECT A.*,
		SUM(IFNULL(AL.point, 0)) AS extra__likePoint
		FROM (
		    SELECT A.*,
		    M.nickname AS extra__writer,
		    COUNT(DISTINCT RL.id) AS extra__repliesCount
		    FROM article AS A
		    INNER JOIN `member` AS M
		    ON A.memberId = M.id
		    AND M.delStatus = 0
		    LEFT JOIN reply AS RL
		    ON A.id = RL.relId
		    AND RL.relTypeCode = 'article'
		    AND RL.displayStatus = 1
		    AND RL.delStatus = 0
		    WHERE A.displayStatus = 1
		    AND A.delStatus = 0
		    AND A.id = #{id}
		    GROUP BY A.id
		) AS A
		LEFT JOIN articleLike AS AL
		ON A.id = AL.articleId
		GROUP BY A.id
	</select>

	<select id="getArticleById" resultType="Article">
		SELECT *
		FROM
		article
		WHERE
		id = #{id}
	</select>
	
	<select id="getBoardByCode" resultType="Board">
		SELECT *
		FROM
		board
		WHERE
		`code` = #{code}
		AND delStatus = 0
	</select>

	<insert id="write" useGeneratedKeys="true" keyProperty="id">
		INSERT
		INTO article
		SET regDate = NOW(),
		updateDate = NOW(),
		title = #{title},
		body = #{body},
		memberId = #{memberId},
		boardId = #{boardId},
		displayStatus = 1
	</insert>

	<update id="modify">
		UPDATE article
		<set>
			updateDate = NOW(),
			<if test="title != null">title = #{title},</if>
			<if test="body != null">body = #{body},</if>
		</set>
		WHERE id = #{id}
	</update>
	
	<update id="doDelete">
		UPDATE article
		SET delDate = NOW(),
		delStatus = 1
		WHERE id = #{id}
		AND memberId = #{memberId}
		AND boardId = #{boardId}
	</update>
	
	<update id="increaseArticleHit">
		UPDATE article
		SET hit = hit + 1
		WHERE id = #{id}
	</update>
	
	<!-- board list -->
	<select id="getAllBoards" resultMap="board">
		SELECT *
		FROM board
		WHERE delStatus = 0
	</select>
	
	<!--  좋아요 기능 -->
	<select id="getLikePointByMemberId" resultType="int">
		SELECT
		IFNULL(SUM(AL.point), 0) AS `point`
		FROM articleLike AS AL
		WHERE
		AL.articleId = #{id}
		AND AL.memberId = #{memberId}
	</select>
	
	<insert id="likeArticle" parameterType="map">
		INSERT INTO articleLike
		SET regDate
		= NOW(),
		articleId = #{id},
		memberId = #{memberId},
		`point` = 1
	</insert>
	
	<!-- main에 일정 수의 개시글 가져오기 -->
	<select id="getMethForArticles" resultMap="article">
		SELECT *
		FROM article
		WHERE boardId = #{boardId}
		AND displayStatus = 1
		AND delStatus = 0
		ORDER BY id DESC
		LIMIT 0, #{limit}
	</select>
	
	<insert id="setReportDoc" parameterType="map">
		INSERT INTO reportDoc
		SET regDate = NOW(),
		boardId = #{boardId},
		articleId = #{articleId},
		memberId = #{loginedMemberId},
		reportType = #{reportType},
		reportBody = #{reportBody}
	</insert>
	
	<resultMap type="Board" id="board">
		<id property="id" column="id" />
		<id property="regDate" column="regDate" />
		<id property="updateDate" column="updateDate" />
		<id property="delDate" column="delDate" />
		<id property="delStatus" column="delStatus" />
		<id property="code" column="code" />
		<id property="name" column="name" />
		<association property="extra" javaType="map">
			<id property="writer" column="extra__writer" />
		</association>
	</resultMap>
	
	<resultMap type="Article" id="article">
		<id property="id" column="id" />
		<id property="regDate" column="regDate" />
		<id property="updateDate" column="updateDate" />
		<id property="delDate" column="delDate" />
		<id property="displayStatus" column="displayStatus" />
		<id property="delStatus" column="delStatus" />
		<id property="title" column="title" />
		<id property="body" column="body" />
		<id property="memberId" column="memberId" />
		<id property="boardId" column="boardId" />
		<id property="hit" column="hit" />
		<association property="extra" javaType="map">
			<id property="writer" column="extra__writer" />
			<id property="likePoint" column="extra__likePoint" />
			<id property="repliesCount" column="extra__repliesCount" />
			<id property="boardName" column="extra__boardName" />
		</association>
	</resultMap>
</mapper>