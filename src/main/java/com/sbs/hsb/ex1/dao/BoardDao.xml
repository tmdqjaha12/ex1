<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sbs.hsb.ex1.dao.BoardDao">

	<!-- 커뮤니티 보드 만들기 -->
	<insert id="doApplyForCreateBoard" useGeneratedKeys="true" keyProperty="id">
		INSERT
		INTO board
		SET regDate = NOW(),
		updateDate = NOW(),
		applyStatus = 1,
		code = #{code},
		name = #{name},
		memberId = #{memberId}
	</insert>
	
	<!-- 만들어진 커뮤니티 보드의 id 가져오기 -->
	<select id="getBoardId" resultType="int">
		SELECT id
		FROM board
		WHERE name = #{name}
	</select>
	
	<!-- 커뮤니티 신청 거절 -->
	<update id="doBoardReject">
		UPDATE boardApplyDoc
		SET
		updateDate = NOW(),
		delStatus = 1
		WHERE memberId = #{memberId}
		AND name = #{name}
		AND boardId = #{boardId}
	</update>
	
	<!-- 신청서에 applyStatus = 1 
	<update id="docApplyConfirm">
		UPDATE boardApplyDoc
		SET
		updateDate = NOW(),
		applyStatus = 1,
		boardId = #{boardId}
		WHERE memberId = #{memberId}
		AND name = #{name}
	</update> -->
	
	<!-- 신청서 저장 -->
	<insert id="setBoardApplyDoc" useGeneratedKeys="true" keyProperty="id">
		INSERT
		INTO boardApplyDoc
		SET regDate = NOW(),
		updateDate = NOW(),
		memberId = #{memberId},
		name = #{name},
		body = #{body}
	</insert>
	
	<!-- 신청서이름과 현재존재하는 커뮤니티 이름을 비교 -->
	<select id="getBoardNameDupCount" resultType="int">
		SELECT COUNT(*) AS
		cnt
		FROM board
		WHERE name = #{name}
		AND delStatus = 0
	</select>
	
	<!-- 신청서 리스트 !페이징아직없음 -->
	<select id="getAllBoardApplyDocs" resultMap="boardApplyDoc">
		SELECT D.*,
		M.nickname AS extra__writer
		FROM boardApplyDoc AS D
		INNER JOIN member AS M
		ON D.memberId = M.id
		WHERE M.delStatus = 0
		AND D.delStatus = 0
	</select>
	
	<!-- 같은 이름으로 신청된 신청서들 전부 삭제 -->
	<update id="doDelDocNameDup">
		UPDATE boardApplyDoc
		SET
		updateDate = NOW(),
		delStatus = 1
		WHERE name = #{name}
	</update>
	
	<!-- 현재 생성된 board 랜덤 코드가, 기존 board 코드와 중복이 있는가 -->
	<select id="getBoardCodeDup" resultType="int">
		SELECT COUNT(`code`) AS cnt
		FROM board
		WHERE `code` = #{randomCode}
	</select>
	
	<!-- myPage관련 -->
	<!-- 내 신청서 리스트 -->
	<select id="getMyBoardApplyList" resultType="boardApplyDoc">
		SELECT *
		FROM boardApplyDoc
		WHERE memberId = #{loginedMemberId}
		AND delStatus = 0
	</select>
	
	<!-- 내 커뮤니티 목록 -->
	<select id="getMyBoardList" resultType="board">
		SELECT *
		FROM board
		WHERE memberId = #{loginedMemberId}
		AND delStatus = 0
		ORDER BY id DESC
	</select>
	
	<!-- 보드 가져오기 -->
	<select id="getBoardByCodeFromManager" resultType="board">
		SELECT *
		FROM
		board
		WHERE
		`code` = #{code}
		AND delStatus = 0
		AND memberId = #{memberId}
	</select>
	
	<!-- 신고Doc 가져오기 -->
	<select id="getBAReportList" resultMap="reportDoc">
		SELECT RD.*,
		M.nickname AS extra__Mnickname
		FROM `reportDoc` AS RD
		INNER JOIN `member` AS M
		ON RD.memberId = M.id
		WHERE RD.boardId = #{boardId}
		AND RD.delStatus = 0
		ORDER BY RD.id DESC
	</select>
	
	<!-- 신고Doc 삭제 deleteReport-->
	<update id="deleteReport">
		UPDATE reportDoc
		SET
		delDate = NOW(),
		delStatus = 1
		WHERE id = #{id}
	</update>
	
	<!-- HOT 커뮤니티 -->
	<select id="getHotBoards" resultMap="board">
		SELECT B.*
		FROM (
		    SELECT B.*,
		    COUNT(DISTINCT A.id) AS extra_articleCount
		    FROM board AS B
		    INNER JOIN article AS A
		    ON B.id = A.boardId
		    WHERE DATE(A.regDate) >= DATE_SUB(NOW(), INTERVAL 2 DAY)
		    GROUP BY B.id
		    ORDER BY extra_articleCount DESC
		) AS B
		LIMIT 0, 5
	</select>
	
	<!-- NEW 커뮤니티 -->
	<select id="getNewBoards" resultMap="board">
		SELECT *
		FROM board d
		ORDER BY id DESC
		LIMIT 0, 5;
	</select>
	
	
	<select id="getBoardByCode" resultMap="board">
		SELECT *
		FROM board
		WHERE code = #{code}
	</select>
	
	<resultMap type="ReportDoc" id="reportDoc">
		<id property="id" column="id" />
		<id property="regDate" column="regDate" />
		<id property="delDate" column="delDate" />
		<id property="delStatus" column="delStatus" />
		<id property="boardId" column="boardId" />
		<id property="articleId" column="articleId" />
		<id property="memberId" column="memberId" />
		<id property="reportType" column="reportType" />
		<id property="reportBody" column="reportBody" />
		<association property="extra" javaType="map">
			<id property="Mnickname" column="extra__Mnickname" />
		</association>
	</resultMap>
	
	
	<resultMap type="BoardApplyDoc" id="boardApplyDoc">
		<id property="id" column="id" />
		<id property="regDate" column="regDate" />
		<id property="updateDate" column="updateDate" />
		<id property="delDate" column="delDate" />
		<id property="delStatus" column="delStatus" />
		<id property="memberId" column="memberId" />
		<id property="name" column="name" />
		<id property="body" column="body" />
		<id property="boardId" column="boardId" />
		<association property="extra" javaType="map">
			<id property="writer" column="extra__writer" />
		</association>
	</resultMap>
	
	<resultMap type="Board" id="board">
		<id property="id" column="id" />
		<id property="regDate" column="regDate" />
		<id property="updateDate" column="updateDate" />
		<id property="delDate" column="delDate" />
		<id property="delStatus" column="delStatus" />
		<id property="code" column="code" />
		<id property="name" column="name" />
		<id property="memberId" column="memberId" />
		<association property="extra" javaType="map">
			<id property="articleCount" column="extra_articleCount" />
		</association>
	</resultMap>
</mapper>
